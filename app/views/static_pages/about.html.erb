<% provide(:title, "About") %>
<h1>About</h1>

<h1>
Sessions and Cookies Presentation
</h1>
<h2>Project 1 Flatiron School 
</h2>

<p>
 
There are many things that we, as developers, rely on without giving it too much thought. They are taken care of by libraries that we use. The logic is abstracted for you, but it’s important to understand how the libraries we uses implements those structures so we understand security tradeoffs that might not be obvious otherwise.
</p>

<p>

HTTP is a “stateless protocol”. This means that by default, any two requests are handled completely independently, regardless if they come from the same address, request the same resource, or are sent in quick succession. This leaves all applications with the responsibility to provide some degree of state management.
</p>

<p>
Cookies, Sessions, and Flashes
Cookies, Sessions and Flashes are three special objects that Rails 4 gives you which each behave a lot like hashes. They are used to persist data between requests, whether until just the next request, until the browser is closed, or until a specified expiration has been reached. In addition to different temporal concerns, they each solve slightly different use cases.


</p>

<h3>by<h3/><br>
<h3>    Maureen Johnston</h3> <br>
<h3>    Michael Teja</h3> 
 <br>
           <%= link_to image_tag("ruby_happy.jpeg", alt: "Cookies logo"),
              'http://rubyonrails.org/' %>